name: Build and Test

on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-22.04

    env:
      PIP_CACHE_DIR: ~\pip_cache
      LLVM_BUILD_DIR: ${{ github.workspace }}/llvm-project/llvm-build

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      # Cache the LLVM build
      - name: Cache LLVM Build
        id: cache-llvm-build
        uses: actions/cache@v2
        with:
          path: ${{ env.LLVM_BUILD_DIR }}
          key: llvm-build-99020b3c73c1e22fa388be8fd0c44391d40b3a38
          restore-keys: |
            llvm-build-

      # Checkout and build LLVM from specific commit only if cache miss
      - name: Checkout and Build LLVM
        if: steps.cache-llvm-build.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          git checkout 99020b3c73c1e22fa388be8fd0c44391d40b3a38
          mkdir -p llvm-build
          cd llvm-build
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug ../llvm
          make -j$(nproc)

      - name: Add LLVM to PATH
        run: echo "$GITHUB_WORKSPACE/llvm-project/llvm-build/bin" >> $GITHUB_PATH

      - name: Check LLVM opt and g++ version
        run: |
          opt --version
          g++ -v

      # Cache Python dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: pip-${{ hashFiles('**/python_requirements.txt') }}
          restore-keys: |
            pip-

      - name: Setup Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Create and start virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate

      # Only install if cache was not hit
      - name: Install dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: | 
          echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu focal main universe" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          sudo apt -y install g++-7 
          pip install -r python_requirements.txt
          sudo apt-get install gcc-multilib g++-multilib
          sudo apt install build-essential 

      - name: Build all
        run: |
          bash build_all.sh

      - name: Run array add
        run:  python -u run_morpher_llvm16.py morpher_benchmarks/array_add/array_add.c array_add

      - run: echo "üçè This job's status is ${{ job.status }}."
